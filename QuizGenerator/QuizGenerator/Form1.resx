<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>